//Create a database named ToDoDB.
use ToDoDB
//Design a collection named tasks.
show collections
tasks


//Insert at least 5 tasks with various titles, descriptions, statuses, and due dates.
db.tasks.insertMany([
{title:"Study for Engineering Exam",Description: "Review lecture notes, complete practice problems",Status: "Completed",DueDate: ISODate("2024-02-18")},
{title: "Work on Btech Project",Description: "Implement feature X and debug existing codebase.",Status: "Pending",DueDate:ISODate("2024-03-15")},
{title: "Attend Gen-AI Workshop",Description: "Understand basic overview about Gen-AI.",Status: "Completed",DueDate:ISODate("2024-02-14")},
{title: "Prepare for Technical Interview",Description: "Practice coding problems on data structures and algorithms.",Status: "Pending",DueDate: ISODate("2024-03-10")},
{title: "Meet with Academic Advisor",Description: "Discuss course selection for next semester and career planning.",Status: "Pending",DueDate: ISODate("2024-02-22")}])

//Retrieve and display all tasks in the database
db.tasks.find({})

//Display the details of a specific task by searching with its title or status.
db.tasks.find({title:"Work on Btech Project"})


//List all tasks that are pending or completed.
db.tasks.find({Status:"Pending"})
db.tasks.find({Status:"Completed"})

//List of all task which is still pending after due date.
db.tasks.find({
  Status: "Pending",
  DueDate: { $lt: new Date() }
})

//Show all task in pending key and completed key {pending: [task....], completed: [task...]}
db.tasks.aggregate([
  {
    $group: {
      _id: "$Status",
      tasks: { $push: "$$ROOT" }
    }
  }
])


//Update Operation:
//Update the status of a specific task (e.g., from "Pending" to "Completed").
db.tasks.updateOne({ title: "Work on Btech Project" }, { $set: { status: "Completed" } })


//Update the due date of a task.
db.tasks.updateOne({ title: "Work on Btech Project" }, { $set: { dueDate: ISODate("2024-02-25") } })



//Update all pending task which due date is less than 2 days from today.
let currentDate = new Date();

let twoDaysFromNow = new Date(currentDate);
twoDaysFromNow.setDate(currentDate.getDate() + 2);

  {
    status: "Pending",
    dueDate: { $lt: twoDaysFromNow }
  },
  { $set: { status: "Within 2 days" } }
);


//Delete Operation:
//Remove a task by its title or status.
db.tasks.deleteOne({ title: "Prepare for Technical Interview" })

//Delete all completed tasks
db.tasks.deleteMany({ Status: "Completed" })